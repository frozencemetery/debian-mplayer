#  fix crash on broken streams (Closes: #403379)
# many fixes to various codecs, to prevent crashes on randomly altered streams
--- mplayer-1.0~rc1.orig/libavcodec/mpeg12.c
+++ mplayer-1.0~rc1/libavcodec/mpeg12.c
@@ -2579,6 +2579,9 @@
         }
     }
 
+    if(!s->current_picture.mb_type) {
+      av_log(avctx, AV_LOG_ERROR, "mb_type==0\n");
+    } else
     for(;;) {
 #ifdef HAVE_XVMC
         //one 1 we memcpy blocks in xvmcvideo
--- mplayer-1.0~rc1.orig/libavcodec/h264.c
+++ mplayer-1.0~rc1/libavcodec/h264.c
@@ -518,6 +518,10 @@
     int left_block[8];
     int i;
 
+    if(!h->slice_table) {
+      av_log(h->s.avctx, AV_LOG_ERROR, "h->slice_table==NULL\n");
+      return;
+    }
     //FIXME deblocking could skip the intra and nnz parts.
     if(for_deblock && (h->slice_num == 1 || h->slice_table[mb_xy] == h->slice_table[mb_xy-s->mb_stride]) && !FRAME_MBAFF)
         return;
@@ -3320,6 +3324,13 @@
     }
 }
 
+/**
+ * tells if  tables are allocated
+ */
+static int alloc_tables_p(H264Context *h)
+{
+  return h->intra4x4_pred_mode != NULL;
+}
 
 /**
  * allocates tables.
@@ -5148,7 +5159,8 @@
     int mb_type, partition_count, cbp;
     int dct8x8_allowed= h->pps.transform_8x8_mode;
 
-    s->dsp.clear_blocks(h->mb); //FIXME avoid if already clear (move after skip handlong?
+    if(s->dsp.clear_blocks)
+      s->dsp.clear_blocks(h->mb); //FIXME avoid if already clear (move after skip handlong?
 
     tprintf("pic:%d mb:%d/%d\n", h->frame_num, s->mb_x, s->mb_y);
     cbp = 0; /* avoid warning. FIXME: find a solution without slowing
@@ -7436,6 +7448,10 @@
                 h->cabac_state[i] = 2 * ( pre - 64 ) + 1;
         }
 
+      if (!alloc_tables_p(h)) {
+	av_log(h->s.avctx, AV_LOG_ERROR, "cant decode macroblocks now\n");
+	return -1;
+      }
         for(;;){
 //START_TIMER
             int ret = decode_mb_cabac(h);
@@ -7477,6 +7493,10 @@
         }
 
     } else {
+      if (!alloc_tables_p(h)) {
+	av_log(h->s.avctx, AV_LOG_ERROR, "cant decode mabroblocks now\n");
+	return -1;
+      }
         for(;;){
             int ret = decode_mb_cavlc(h);
 
--- mplayer-1.0~rc1.orig/libmpdemux/video.c
+++ mplayer-1.0~rc1/libmpdemux/video.c
@@ -462,7 +462,11 @@
     //newfps=frameratecode2framerate[picture->frame_rate_code]*0.0001f;
     if(sh_video->fps!=picture.fps) if(!force_fps && !telecine){
             mp_msg(MSGT_CPLAYER,MSGL_WARN,"Warning! FPS changed %5.3f -> %5.3f  (%f) [%d]  \n",sh_video->fps,picture.fps,sh_video->fps-picture.fps,picture.frame_rate_code);
-            sh_video->fps=picture.fps;
+            if(picture.fps < 0.01) {
+	      mp_msg(MSGT_CPLAYER,MSGL_ERR,"Error! FPS  %5.3f too small (broken stream?).\n", picture.fps);
+	      return -1;
+	    }
+	    sh_video->fps=picture.fps;
             sh_video->frametime=1.0/picture.fps;
     }
 #endif
--- mplayer-1.0~rc1.orig/libmpcodecs/ad_pcm.c
+++ mplayer-1.0~rc1/libmpcodecs/ad_pcm.c
@@ -20,6 +20,7 @@
 static int init(sh_audio_t *sh_audio)
 {
   WAVEFORMATEX *h=sh_audio->wf;
+  if(h==NULL) return 0;
   sh_audio->i_bps=h->nAvgBytesPerSec;
   sh_audio->channels=h->nChannels;
   sh_audio->samplerate=h->nSamplesPerSec;
