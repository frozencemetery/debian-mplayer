diff -u xine-lib-1.0.1/debian/changelog xine-lib-1.0.1/debian/changelog
--- xine-lib-1.0.1/debian/changelog
+++ xine-lib-1.0.1/debian/changelog
@@ -1,3 +1,9 @@
+xine-lib (1.0.1-1sarge5) stable-security; urgency=high
+
+  * Fix buffer overflow in Real Media handler. (CVE-2006-6172)
+
+ -- Moritz Muehlenhoff <jmm@debian.org>  Wed, 27 Dec 2006 17:44:18 +0100
+
 xine-lib (1.0.1-1sarge4) stable-security; urgency=high
 
   * Non-maintainer upload by the Security Team.
only in patch2:
unchanged:
--- xine-lib-1.0.1.orig/src/input/libreal/real.c
+++ xine-lib-1.0.1/src/input/libreal/real.c
@@ -482,7 +482,7 @@
 
     lprintf("calling asmrp_match with:\n%s\n%u\n", desc->stream[i]->asm_rule_book, bandwidth);
 
-    n=asmrp_match(desc->stream[i]->asm_rule_book, bandwidth, rulematches);
+    n=asmrp_match(desc->stream[i]->asm_rule_book, bandwidth, rulematches, sizeof(rulematches)/sizeof(rulematches[0]));
     for (j=0; j<n; j++) {
       lprintf("asmrp rule match: %u for stream %u\n", rulematches[j], desc->stream[i]->stream_id);
       sprintf(b,"stream=%u;rule=%u,", desc->stream[i]->stream_id, rulematches[j]);
only in patch2:
unchanged:
--- xine-lib-1.0.1.orig/src/input/libreal/asmrp.c
+++ xine-lib-1.0.1/src/input/libreal/asmrp.c
@@ -604,7 +604,7 @@
   return ret;
 }
 
-static int asmrp_eval (asmrp_t *p, int *matches) {
+static int asmrp_eval (asmrp_t *p, int *matches, int matchsize) {
 
   int rule_num, num_matches;
 
@@ -613,7 +613,7 @@
   asmrp_get_sym (p);
 
   rule_num = 0; num_matches = 0;
-  while (p->sym != ASMRP_SYM_EOF) {
+  while (p->sym != ASMRP_SYM_EOF && num_matches < matchsize - 1) {
 
     if (asmrp_rule (p)) {
       lprintf ("rule #%d is true\n", rule_num);
@@ -629,7 +629,7 @@
   return num_matches;
 }
 
-int asmrp_match (const char *rules, int bandwidth, int *matches) {
+int asmrp_match (const char *rules, int bandwidth, int *matches, int matchsize) {
 
   asmrp_t *p;
   int      num_matches;
@@ -641,7 +641,7 @@
   asmrp_set_id (p, "Bandwidth", bandwidth);
   asmrp_set_id (p, "OldPNMPlayer", 0);
 
-  num_matches = asmrp_eval (p, matches);
+  num_matches = asmrp_eval (p, matches, matchsize);
 
   asmrp_dispose (p);
 
only in patch2:
unchanged:
--- xine-lib-1.0.1.orig/src/input/libreal/asmrp.h
+++ xine-lib-1.0.1/src/input/libreal/asmrp.h
@@ -37,6 +37,6 @@
 #ifndef HAVE_ASMRP_H
 #define HAVE_ASMRP_H
 
-int asmrp_match (const char *rules, int bandwidth, int *matches) ;
+int asmrp_match (const char *rules, int bandwidth, int *matches, int matchesizxe) ;
 
 #endif
