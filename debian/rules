#!/usr/bin/make -f

include /usr/share/quilt/quilt.make

# This has to be exported to make some magic below work.
export DH_OPTIONS

# do not run the actual rules of this makefile in parallel. sub-makes
# can go in parallel
.NOTPARALLEL:

############

DEB_SOURCE := $(shell dpkg-parsechangelog | sed -n 's/^Source: //p')
DEB_VERSION := $(shell dpkg-parsechangelog | sed -n 's/^Version: //p')
UPSTREAM_VERSION := $(shell echo $(DEB_VERSION) | sed -r 's/[^:]+://; s/-[^-]+$$//')
SVN_VERSION := $(shell echo $(UPSTREAM_VERSION) | sed -nr 's/^[0-9.:-~]+svn([0-9]+)$$/\1/p')


#UPSTREAMSOURCE := upstream SVN repository
UPSTREAMSOURCE := http://www1.mplayerhq.hu/MPlayer/releases/MPlayer-1.0rc1.tar.bz2

#Was troublesome stuff removed ?
# See target "fix-orig-source" in this makefile.
DFSG := $(shell test -d libdvdcss && echo 'This version of MPlayer contains libdvdcss.' )

destdir := $(shell pwd)/debian/$(DEB_SOURCE)

DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_ARCH       ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_HOST_ARCH_OS    ?= $(shell dpkg-architecture -qDEB_HOST_ARCH_OS)
DEB_HOST_ARCH_CPU   ?= $(shell dpkg-architecture -qDEB_HOST_ARCH_CPU)


## This can be overridden from the command line, see README.Debian.
DEB_BUILD_CONFIGURE = \
	--disable-bitmap-font \
	--disable-ggi \
	--disable-xvid \
	--language=all \
	--disable-xmms \
	--disable-arts \
	--disable-aa \
	--disable-mad \
	--disable-libdv \
	--disable-libavutil_a \
	--disable-libavcodec_a \
	--disable-libavformat_a \
	--disable-libpostproc_a \
	--disable-libswscale_a \
	--enable-faad \
	$(archconf)

# Choose whether we want binary codec support (default on unknown archs: no).
with_real_and_xanim = false
with_win32 = false

ifeq ($(DEB_HOST_ARCH),i386)
#Avoid high optimization through gcc.
  archconf += --target=i586-linux
  with_real_and_xanim = true
  with_win32 = true
  DEB_BUILD_CONFIGURE += --enable-runtime-cpudetection
endif
ifeq ($(DEB_HOST_ARCH),amd64)
  #this needs the patch 
  # http://people.freedesktop.org/~jinghua/real64/mplayer-amd64-real-codecs.diff
  with_real_and_xanim = true
  #this does not compile, though : with_win32 = true
  DEB_BUILD_CONFIGURE += --enable-runtime-cpudetection
endif
ifeq ($(DEB_HOST_ARCH),kfreebsd-i386)
  with_real_and_xanim = true
  DEB_BUILD_CONFIGURE += --enable-runtime-cpudetection
endif
ifeq ($(DEB_HOST_ARCH),kfreebsd-amd64)
  with_real_and_xanim = true
  DEB_BUILD_CONFIGURE += --enable-runtime-cpudetection
endif
ifeq ($(DEB_HOST_ARCH),powerpc)
  with_real_and_xanim = true
  DEB_BUILD_CONFIGURE += --enable-runtime-cpudetection
endif
ifeq ($(DEB_HOST_ARCH),alpha)
#Avoid high optimization through gcc.
# see http://permalink.gmane.org/gmane.linux.debian.ports.alpha/7295
  archconf += --target=alpha_ev5-linux
  with_real_and_xanim = true
endif
ifeq ($(with_win32),false)
  archconf += --disable-win32dll
else
  archconf += --enable-win32dll
endif
ifeq ($(with_real_and_xanim),false)
  archconf += --disable-real --disable-xanim
else
  archconf += --enable-real --enable-xanim
endif

ifeq ($(DEB_SOURCE),mplayer)
DEB_BUILD_CONFIGURE += --disable-libdvdcss-internal --enable-dvdread --disable-mencoder
endif

# generate debugging symbols for mplayer-dbg for all archs but mipsen,
# see bug #520113
ifneq (,$(findstring mips,$(DEB_HOST_ARCH)))
DEB_BUILD_CONFIGURE += --enable-debug
endif


ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
         NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
         MAKEFLAGS += -j$(NUMJOBS)
endif


ifeq (linux,$(DEB_HOST_ARCH_OS))
    DEB_BUILD_CONFIGURE += --enable-tv-v4l2 --enable-xmga --enable-mga --enable-3dfx --enable-tdfxfb --enable-fbdev
endif
ifeq (kfreebsd,$(DEB_HOST_ARCH_OS))
    DEB_BUILD_CONFIGURE += --enable-tv-bsdbt848 --disable-directfb
endif

####### build-arch

COMMON_CONFIGURE_FLAGS = \
	--prefix=/usr \
	--confdir=/etc/mplayer \
	--datadir=/usr/share/mplayer \
	--codecsdir=/usr/lib/codecs \
	--enable-xvmc \
	--enable-sdl \
	--enable-ossaudio \
	--enable-lirc \
	--enable-gui \
	--enable-freetype \
	--enable-menu \
	--enable-largefiles 

# See http://wiki.debian.org/Teams/Dpkg/DebianRules; #465282  and
# https://wiki.ubuntu.com/DistCompilerFlags
CLEAN_ENV=env -u CFLAGS -u CPPFLAGS -u LDFLAGS -u FFLAGS -u CXXFLAGS

configure: configure-arch-stamp
configure-arch-stamp: $(QUILT_STAMPFN)
	dh_testdir
	test -r .svnrevision && cp .svnrevision snapshot_version
	# Add commands to configure the package here.
	$(CLEAN_ENV) \
	./configure $(COMMON_CONFIGURE_FLAGS) $(DEB_BUILD_CONFIGURE)
	#tweak config.mak on request
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	mv config.mak  config.mak~~
	sed '/FLAGS/s/ -O[0-9] /  /' config.mak~~ > config.mak
endif
	touch configure-arch-stamp

# commands to compile the package
build-arch: build-arch-stamp
build-arch-stamp: configure-arch-stamp
	dh_testdir
ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
ifeq ($(DEB_HOST_ARCH),i386)
	echo SORRY THIS DOES NOT WORK CURRENTLY
	cd libvo && ${CLEAN_ENV} ${MAKE}  CC='gcc -O'  osd.o
	cd libavcodec && ${CLEAN_ENV} ${MAKE} i386/dsputil_mmx.o cabac.o  OPTFLAGS=" -O2 -ffast-math -fomit-frame-pointer"
	cd libpostproc && ${CLEAN_ENV} ${MAKE} postprocess.o  OPTFLAGS=" -O2 -ffast-math -fomit-frame-pointer"
	cd mp3lib && ${CLEAN_ENV} ${MAKE} dct64_sse.o  OPTFLAGS=" -I.. -O2 -ffast-math -fomit-frame-pointer"
	cd liba52 && ${CLEAN_ENV} ${MAKE} imdct.o  OPTFLAGS=" -I.. -O2 -ffast-math -fomit-frame-pointer"
endif
endif
	#workaround for 478731 (hopefully)
	#cd gui && ${CLEAN_ENV} ${MAKE} skin/skin.o skin/font.o   OPTFLAGS=" -I. -I.. -g -Wall"

	$(CLEAN_ENV) \
	$(MAKE)
	touch build-arch-stamp

###### build-indep

# commands to compile the docs
build-indep: configure-arch-stamp build-indep-stamp
build-indep-stamp:
	dh_testdir
	cd DOCS/xml && ./configure
	$(CLEAN_ENV) \
	$(MAKE) -C DOCS/xml html-chunked
	touch build-indep-stamp

build: build-indep build-arch


################ clean

clean: clean-real unpatch

clean-real:
	dh_testdir
	dh_testroot
	test -r config.mak && $(MAKE) -C DOCS/xml distclean || true
	$(MAKE) distclean
	dh_clean config.h config.mak configure.log
	dh_clean build-arch-stamp build-indep-stamp configure-arch-stamp snapshot_version
	find -name '*.o' -or -name '*.a' -or -name '*~' \
		-or -name semantic.cache -print0 |\
		xargs -r0 rm -v


##################### install

manlangs := $(notdir $(wildcard DOCS/man/*) )

install-arch:  build-arch
	dh_testdir
	dh_clean -a -k
# scripts
	chmod a+x debian/scripts/*
	dh_install debian/scripts usr/share/mplayer/
	dh_install debian/prefs var/lib/mplayer/

# commands to install the package into debian/<packagename>
	${MAKE} prefix=$(destdir)/usr BINDIR=$(destdir)/usr/bin CONFDIR=$(destdir)/etc/mplayer LIBDIR=$(destdir)/usr/lib DATADIR=$(destdir)/usr/share/mplayer  MANDIR=$(destdir)/usr/share/man  install

	dh_link usr/bin/mplayer usr/bin/gmplayer
	dh_link usr/share/man/man1/mplayer.1.gz usr/share/man/man1/gmplayer.1.gz

# Install man pages.
	set -e && for i in $(manlangs) ; do mkdir -p $(destdir)/usr/share/man/$$i/man1/ && cp DOCS/man/$$i/mplayer.1 $(destdir)/usr/share/man/$$i/man1/ && dh_link usr/share/man/$$i/man1/mplayer.1.gz usr/share/man/$$i/man1/gmplayer.1.gz ; done

	dh_installdebconf -p $(DEB_SOURCE)
	dh_installdocs  -p $(DEB_SOURCE) Copyright

	dh_installexamples etc/example.conf etc/menu.conf etc/input.conf

install-indep: build-indep 
	dh_testdir
	dh_clean -i -k
	dh_installdocs  -p mplayer-doc Copyright DOCS/HTML DOCS/tech


#####################################################
## this snippet again comes from debhelper-5.0.40/examples/rules.multi2

# This single target is used to build all the packages, all at once, or
# one at a time. So keep in mind: any options passed to commands here will
# affect _all_ packages. Anything you want to only affect one package
# should be put in another target, such as the install target.
binary-common:
	dh_testdir
	dh_testroot
	dh_installchangelogs
	dh_installdocs
	dh_installexamples
	dh_installmenu
	dh_installdebconf
	dh_installmime
	dh_installinit
	dh_installman
	dh_desktop
#       dh_installcron
#       dh_installinfo
#       dh_undocumented
	dh_strip --dbg-package=mplayer-dbg
	dh_link
###### non-orthodox mungling
#	Add automatic vo list.
	if test -r	debian/$(THISPACKAGE)/DEBIAN/config ; then sh -e debian/config.augmenter debian/$(THISPACKAGE)/DEBIAN/config ; fi
#	Rewrite README.Debian and add free or non-free statement.
ifeq ($(DEB_SOURCE),mplayer)
	tail -n +2  debian/README.Debian.free \
	  > debian/$(THISPACKAGE)/usr/share/doc/$(THISPACKAGE)/README.Debian
else
	tail -n +2  debian/README.Debian.nonfree \
	  > debian/$(THISPACKAGE)/usr/share/doc/$(THISPACKAGE)/README.Debian
endif
	sed 's!@DEB_BUILD_CONFIGURE@!$(DEB_BUILD_CONFIGURE)!' \
	  <  debian/README.Debian \
	  >> debian/$(THISPACKAGE)/usr/share/doc/$(THISPACKAGE)/README.Debian

########
	dh_compress
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb



# Build architecture-independent packages using the common target.
binary-indep: install-indep
	$(MAKE) -f debian/rules DH_OPTIONS=-i THISPACKAGE=mplayer-doc binary-common

# Build architecture-dependent packages using the common target.
binary-arch: install-arch
	$(MAKE) -f debian/rules DH_OPTIONS=-a THISPACKAGE=mplayer binary-common

binary: binary-indep binary-arch

#####################################################
##This target generates debian/control. It is not automatically invoked.
debian/control: debian/control.$(DEB_SOURCE)
	cp -v $< $@

###############################################
##These targets generate the DFSG-free tar.gz.
## They are not automatically invoked.

get-orig-source:
	dh_testdir
	# strip patented code
	chmod +x debian/strip.sh
	sh debian/get-orig-source.sh -d$(SVN_VERSION)

.PHONY: build clean binary-indep binary-arch binary-common binary install binary binary-arch binary-indep clean checkroot get-orig-source autocontrol fix-orig-source copy-orig-from-svn download-and-unpack-orig
