#!/usr/bin/make -f

include /usr/share/quilt/quilt.make

# This has to be exported to make some magic below work.
export DH_OPTIONS

# do not run the actual rules of this makefile in parallel. sub-makes
# can go in parallel
.NOTPARALLEL:

############

DEB_SOURCE := $(shell dpkg-parsechangelog | sed -n 's/^Source: //p')
DEB_VERSION := $(shell dpkg-parsechangelog | sed -n 's/^Version: //p')
UPSTREAM_VERSION := $(shell echo $(DEB_VERSION) | sed -r 's/[^:]+://; s/-[^-]+$$//')
SVN_VERSION := $(shell echo $(UPSTREAM_VERSION) | sed -nr 's/^[0-9.:-~]+svn([0-9]+)$$/\1/p')


#UPSTREAMSOURCE := upstream SVN repository
UPSTREAMSOURCE := http://www1.mplayerhq.hu/MPlayer/releases/MPlayer-1.0rc1.tar.bz2

DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)
DEB_HOST_ARCH       ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_HOST_ARCH_OS    ?= $(shell dpkg-architecture -qDEB_HOST_ARCH_OS)
DEB_HOST_ARCH_CPU   ?= $(shell dpkg-architecture -qDEB_HOST_ARCH_CPU)


## This can be overridden from the command line, see README.Debian.
DEB_BUILD_CONFIGURE = \
	--disable-bitmap-font \
	--disable-ggi \
	--disable-xvid \
	--language=all \
	--disable-xmms \
	--disable-arts \
	--disable-aa \
	--disable-mad \
	--disable-musepack \
	--disable-libdv \
	--disable-libavutil_a \
	--disable-libavcodec_a \
	--disable-libavformat_a \
	--disable-libpostproc_a \
	--disable-libswscale_a \
	--enable-faad \
	$(archconf)

# Choose whether we want binary codec support (default on unknown archs: no).
with_real_and_xanim = false
with_win32 = false

ifeq ($(DEB_HOST_ARCH),i386)
#Avoid high optimization through gcc.
  archconf += --target=i586-linux
  with_real_and_xanim = true
  with_win32 = true
  DEB_BUILD_CONFIGURE += --enable-runtime-cpudetection
endif
ifeq ($(DEB_HOST_ARCH),amd64)
  #this needs the patch 
  # http://people.freedesktop.org/~jinghua/real64/mplayer-amd64-real-codecs.diff
  with_real_and_xanim = true
  #this does not compile, though : with_win32 = true
  DEB_BUILD_CONFIGURE += --enable-runtime-cpudetection
endif
ifeq ($(DEB_HOST_ARCH),kfreebsd-i386)
  with_real_and_xanim = true
  DEB_BUILD_CONFIGURE += --enable-runtime-cpudetection
endif
ifeq ($(DEB_HOST_ARCH),kfreebsd-amd64)
  with_real_and_xanim = true
  DEB_BUILD_CONFIGURE += --enable-runtime-cpudetection
endif
ifeq ($(DEB_HOST_ARCH),powerpc)
  with_real_and_xanim = true
  DEB_BUILD_CONFIGURE += --enable-runtime-cpudetection
endif
ifeq ($(DEB_HOST_ARCH),alpha)
#Avoid high optimization through gcc.
# see http://permalink.gmane.org/gmane.linux.debian.ports.alpha/7295
  archconf += --target=alpha_ev5-linux
  with_real_and_xanim = true
endif
ifeq ($(with_win32),false)
  archconf += --disable-win32dll
else
  archconf += --enable-win32dll
endif
ifeq ($(with_real_and_xanim),false)
  archconf += --disable-real --disable-xanim
else
  archconf += --enable-real --enable-xanim
endif

ifeq ($(DEB_SOURCE),mplayer)
DEB_BUILD_CONFIGURE += --disable-libdvdcss-internal --enable-dvdread --disable-mencoder
endif

# generate debugging symbols for mplayer-dbg for all archs but mipsen,
# see bug #520113
ifeq (,$(findstring mips,$(DEB_HOST_ARCH)))
DEB_BUILD_CONFIGURE += --enable-debug
endif


ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
         NUMJOBS = $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
         MAKEFLAGS += -j$(NUMJOBS)
endif


ifeq (linux,$(DEB_HOST_ARCH_OS))
    DEB_BUILD_CONFIGURE += --enable-tv-v4l2 --enable-xmga --enable-mga
    DEB_BUILD_CONFIGURE += --enable-3dfx --enable-tdfxfb --enable-fbdev
endif
ifeq (kfreebsd,$(DEB_HOST_ARCH_OS))
    DEB_BUILD_CONFIGURE += --enable-tv-bsdbt848 --disable-directfb
endif

####### build-arch

COMMON_CONFIGURE_FLAGS = \
	--prefix=/usr \
	--confdir=/etc/mplayer \
	--datadir=/usr/share/mplayer \
	--codecsdir=/usr/lib/codecs \
	--enable-xvmc \
	--enable-sdl \
	--enable-ossaudio \
	--enable-lirc \
	--enable-freetype \
	--enable-menu \
	--enable-largefiles 

# See http://wiki.debian.org/Teams/Dpkg/DebianRules; #465282  and
# https://wiki.ubuntu.com/DistCompilerFlags
CLEAN_ENV=env -u CFLAGS -u CPPFLAGS -u LDFLAGS -u FFLAGS -u CXXFLAGS


# this rule is used for both architecture independent and dependent
# builds. When building only the doc package, it still needs the first
# configure run done.
configure: configure-arch-stamp
configure-arch-stamp: $(QUILT_STAMPFN)
	dh_testdir
	test -r .svnrevision && cp .svnrevision snapshot_version
	# Add commands to configure the package here.
	$(CLEAN_ENV) \
	./configure $(COMMON_CONFIGURE_FLAGS) $(DEB_BUILD_CONFIGURE)
	touch configure-arch-stamp

install-common:
	dh_testdir
	[ ! -f config.mak ] || $(MAKE) distclean
	$(CLEAN_ENV) \
	./configure $(COMMON_CONFIGURE_FLAGS) $(DEB_BUILD_CONFIGURE) $(GUI_FLAG)
	$(CLEAN_ENV) \
	$(MAKE)

##################### install

install-nogui:
	$(MAKE) -f debian/rules GUI_FLAG=--disable-gui build-common

	dh_testdir
	dh_prep -a
	$(MAKE) install-mplayer DESTDIR=$(CURDIR)/debian/mplayer-nogui
	$(MAKE) install-mplayer-man-en DESTDIR=$(CURDIR)/debian/mplayer-nogui

# scripts
	chmod a+x debian/scripts/*
	install -D -m 644 etc/example.conf \
	                  $(CURDIR)/debian/mplayer-nogui/etc/mplayer/mplayer.conf

install-gui: 
	$(MAKE) -f debian/rules GUI_FLAG=--enable-gui build-common

	install -D -m 755 mplayer $(CURDIR)/debian/mplayer/usr/bin/gmplayer
	install -D -m 644 DOCS/man/en/mplayer.1 \
	                  $(CURDIR)/debian/mplayer/usr/share/man/man1/gmplayer.1

###### build-indep

# commands to compile the documentation
build-indep: configure-arch-stamp build-indep-stamp
build-indep-stamp:
	dh_testdir
	cd DOCS/xml && ./configure
	$(CLEAN_ENV) \
	$(MAKE) -C DOCS/xml html-chunked
	touch build-indep-stamp

install-indep: build-indep 
	dh_testdir
	dh_prep -i
	$(MAKE) install-mplayer-gui-man DESTDIR=$(CURDIR)/debian/mplayer-doc
	# Drop the english manpage, installed in each mplayer package
	rm -rf $(CURDIR)/debian/mplayer-doc/usr/share/man/mplayer.1
	dh_installdocs -i


################ clean

clean: clean-real unpatch
clean-real:
	dh_testdir
	dh_testroot
	[ ! -f config.mak ] || $(MAKE) -C DOCS/xml distclean || true
	[ ! -f config.mak ] || $(MAKE) distclean
	dh_clean build-arch-stamp build-indep-stamp configure-arch-stamp snapshot_version


binary-common:
	dh_testdir
	dh_testroot
	dh_install
	dh_installchangelogs
	dh_installdocs
	dh_installexamples
	dh_installmenu
	dh_installmime
	dh_installinit
	dh_installman
	dh_desktop
	dh_strip --dbg-package=mplayer-dbg
	dh_link
###### non-orthodox mungling
#	Rewrite README.Debian and add free or non-free statement.
ifeq ($(DEB_SOURCE),mplayer)
	tail -n +2  debian/README.Debian.free \
	  > debian/$(THISPACKAGE)/usr/share/doc/$(THISPACKAGE)/README.Debian
else
	tail -n +2  debian/README.Debian.nonfree \
	  > debian/$(THISPACKAGE)/usr/share/doc/$(THISPACKAGE)/README.Debian
endif
	sed 's!@DEB_BUILD_CONFIGURE@!$(DEB_BUILD_CONFIGURE)!' \
	  <  debian/README.Debian \
	  >> debian/$(THISPACKAGE)/usr/share/doc/$(THISPACKAGE)/README.Debian

########
	dh_compress
	dh_fixperms
	dh_makeshlibs
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb



# Build architecture-independent packages using the common target.
binary-indep: install-indep
	$(MAKE) -f debian/rules DH_OPTIONS=-i THISPACKAGE=mplayer-doc binary-common

# Build architecture-dependent packages using the common target.
binary-arch: binary-nogui binary-gui
binary-gui: install-gui
	$(MAKE) -f debian/rules DH_OPTIONS=-a THISPACKAGE=mplayer binary-common

binary-nogui: install-nogui
	$(MAKE) -f debian/rules DH_OPTIONS=-a THISPACKAGE=mplayer-nogui binary-common

binary: binary-indep binary-arch

###############################################
##These targets generate the DFSG-free tar.gz.
## They are not automatically invoked.

get-orig-source:
	dh_testdir
	# strip patented code
	chmod +x debian/strip.sh
	sh debian/get-orig-source.sh -d $(SVN_VERSION)

PHONY += build clean binary-indep binary-arch binary-common binary 
PHONY += install binary binary-arch binary-indep clean checkroot get-orig-source
PHONY += autocontrol fix-orig-source copy-orig-from-svn download-and-unpack-orig
PHONY += build-gui build-nogui install-gui install-nogui

.PHONY: $(PHONY)
